<p id="notice">지도:</p>
<ul class="thumbnails col-sm-1 col-md-9 bg-dark" >
    <li class="span4">
        <div class="map_wrap">
            <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
            <div class="hAddr">
                <span class="title">지도중심기준 행정동 주소정보</span>
                <span id="centerAddr"></span>
            </div>
        </div>
        <button onclick="hideMarkers()">마커 감추기</button>
        <button onclick="showMarkers()">마커 보이기</button>
    </li>
    <li class="span4">
        <span id="loginlocation" style="font-size:1.5em;  color: white;"> 현재 접속한 위치 정보(x,y):</span>
    </li>
    <li class="span4">
        <span style="font-size:1.5em;  color: white;"> 검색어:<%= @searchText %> </span>
    </li>
    <li class="span4">
      <button class=" col-sm-1 col-md-9"><%= link_to '도장 페이지 새로 만들기', new_post_path %>
       </button>
    </li>
    <% @posts.each do |post| %>
        <li class="span4">
            <div class="thumbnail col-sm-1 col-md-9">
            <%if post.image !=nil %>
                 <%= image_tag post.image, :align=>"left" if post.image.attached? %> 
            <% else %>
                <img src="https://placehold.it/300x200" align="left" alt="사진없음">
            <% end %>
            <ul>도장명: <%= post.CourtName %></ul>
            <ul>도장간단설명: <%= post.CourtSubIntro %>간단 설명</ul>
            <ul>위치(x,y): (<%= post.lat%>,<%= post.lng%>)</ul>
            <ul><%= link_to '보기', post %></ul>
            <ul><%= link_to '변경', edit_post_path(post) %></ul>
            <ul><%= link_to '삭제', post, method: :delete, data: { confirm: 'Are you sure?' } %></ul>
            </div>
        </li>
    <% end %>
    <li class="span4">
        <div class="col-sm-1 col-md-9"><%= will_paginate %></div>
    </li>
    <li class="span4">
        <input type="text" class="col-sm-1 col-md-9"id="SearchInput"  placeholder="도장을 검색하세요...">
         <div class="btn-group col-sm-1 col-md-1" role="group" aria-label="Basic example">
          <button type="submit" class="btn btn-primary mx-auto" id="SearchText">검색</button>
          <button id="CategoryID1" type="button" class="btn btn-secondary">최신순</button>
          <button id="CategoryID2" type="button" class="btn btn-secondary">거리순</button>
          <button id="CategoryID3" type="button" class="btn btn-secondary">평점순</button>
        </div>
    </li>    
</ul>




<%# 지도 Control 영역 (제일 아래에 작성) %>
<script>
$(function(){
    var CategoryID=0;
  $('#SearchText').click(function(){
    window.location = '/posts?searchtext=' + $('#SearchInput').val()+'&CategoryID='+CategoryID;
  })
  $('#CategoryID1').click(function(){
    CategoryID=1;
  })
  $('#CategoryID2').click(function(){
    CategoryID=2;
  })
  $('#CategoryID3').click(function(){
    CategoryID=3;
  })
})
// HTML5의 geolocation으로 사용할 수 있는지 확인합니다 
if (navigator.geolocation) {
    
    // GeoLocation을 이용해서 접속 위치를 얻어옵니다
    navigator.geolocation.getCurrentPosition(function(position) {
        
        var lat = position.coords.latitude, // 위도
            lon = position.coords.longitude; // 경도
        
        var locPosition = new daum.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
            message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다
        
        // 마커와 인포윈도우를 표시합니다
        //displayMarker(locPosition, message);
        
        document.getElementById('loginlocation').innerHTML +=locPosition;
            
      });
    
} else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
    
    var locPosition = new daum.maps.LatLng(33.450701, 126.570667),    
        message = 'geolocation을 사용할수 없어요..'
        
    //displayMarker(locPosition, message);
}


var mapContainer = document.getElementById('map'), // 지도를 표시할 div  
    mapOption = { 
        center: new daum.maps.LatLng(37.411368205075355, 127.12877009101574), // 지도의 중심좌표
        level: 1 // 지도의 확대 레벨
    };
 
var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
 

  // Json 비동기 처리방식
//  $.getJSON('/index.json', function(data){
//
//    $.each(data, function(i, item){
// 
//     var positions = [
//        {
//          content: '<div>'+item.CourtName+'</div>', 
//          latlng: new daum.maps.LatLng(item.lat, item.lng)
//        },
//      ];

// 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 
var positions = [
      <% if @posts !=nil %>
    <% @posts.each do |x| %>
    {
        <% if x.lat !='' %>
        <%x.lat=0;%>
        <%end%>
        <% if x.lng !='' %>
        <%x.lng=0;%>
        <%end%>
        content: '<div><%= x.CourtName %></div>', 
        latlng: new daum.maps.LatLng(<%= x.lat %>, <%= x.lng %>),
        url: '<%=x%>'
    },
    <% end %>
    <% end %>
];
 
// 지도에 표시된 마커 객체를 가지고 있을 배열입니다
var markers = [];
 
for (var i = 0; i < positions.length; i ++) {
    // 마커를 생성합니다
    var marker = new daum.maps.Marker({
        map: map, // 마커를 표시할 지도
        position: positions[i].latlng // 마커의 위치
    });


    var postid=i+1;
    var iwContent = '<div style="padding:5px;">도장명:'+positions[i].content+'<br><a id="CourtName" href="/posts/'+postid+'" style="color:blue" target="_blank">도장보기</a> <a href="#" style="color:blue" target="_blank">길찾기</a></div>';
   
    //document.getElementById("CourtName").innerText="/posts/1";
    

   //var iwContent = positions[i].content, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
    iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다

    // 마커에 표시할 인포윈도우를 생성합니다 
    var infowindow = new daum.maps.InfoWindow({
         position: positions[i].latlng, // 마커의 위치
        content: iwContent // 인포윈도우에 표시할 내용
    });
    
    // 생성된 마커를 배열에 추가합니다
    markers.push(marker);
 
    // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
    daum.maps.event.addListener(marker, 'click2', makeClickListener(map, marker, infowindow));
    // 이벤트 리스너로는 클로저를 만들어 등록합니다 
    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
    daum.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
    //daum.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
}
//   })
//  }) 
  
  
  // 마커에 클릭이벤트를 등록합니다
kakao.maps.event.addListener(marker, 'click2', function() {
     searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
        if (status === daum.maps.services.Status.OK) {
            var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
            detailAddr += '<div>123 : ' + result[0].address.address_name + '</div>';
            
            var content = '<div class="bAddr">' +
                            '<span class="title">클릭이벤트</span>' + 
                            detailAddr + 
                        '</div>';

            // 마커를 클릭한 위치에 표시합니다 
            marker.setPosition(mouseEvent.latLng);
            marker.setMap(map);

            // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
            infowindow.setContent(content);
            infowindow.open(map, marker);
        }   
    });
});

function makeClickListener(map, marker, infowindow) {
  return function() {
    infowindow.open(map, marker);
  };
}

// 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}
 
// 인포윈도우를 닫는 클로저를 만드는 함수입니다 
function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
}
 
 
/* 마커 보이기 및 숨기기 제어 */
// 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다
function setMarkers(map) {
    for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(map);
    }            
}
 
// "마커 보이기" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에 표시하는 함수입니다
function showMarkers() {
    setMarkers(map)    
}
 
// "마커 감추기" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다
function hideMarkers() {
    setMarkers(null);    
}

////////////////// geolocation 정보를 이용해 법정 주소지 찾기


// 주소-좌표 변환 객체를 생성합니다
var geocoder = new daum.maps.services.Geocoder();

var marker = new daum.maps.Marker(), // 클릭한 위치를 표시할 마커입니다
    infowindow = new daum.maps.InfoWindow({zindex:1}); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다

// 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
searchAddrFromCoords(map.getCenter(), displayCenterInfo);

// 지도를 클릭했을 때 클릭 위치 좌표에 대한 주소정보를 표시하도록 이벤트를 등록합니다
daum.maps.event.addListener(map, 'click', function(mouseEvent) {
    searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
        if (status === daum.maps.services.Status.OK) {
            var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
            detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';
            
            var content = '<div class="bAddr">' +
                            '<span class="title">법정동 주소정보</span>' + 
                            detailAddr + 
                        '</div>';

            // 마커를 클릭한 위치에 표시합니다 
            marker.setPosition(mouseEvent.latLng);
            marker.setMap(map);

            // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
            infowindow.setContent(content);
            infowindow.open(map, marker);
        }   
    });
});

// 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
daum.maps.event.addListener(map, 'idle', function() {
    searchAddrFromCoords(map.getCenter(), displayCenterInfo);
});

function searchAddrFromCoords(coords, callback) {
    // 좌표로 행정동 주소 정보를 요청합니다
    geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);         
}

function searchDetailAddrFromCoords(coords, callback) {
    // 좌표로 법정동 상세 주소 정보를 요청합니다
    geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
}

// 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
function displayCenterInfo(result, status) {
    if (status === daum.maps.services.Status.OK) {
        var infoDiv = document.getElementById('centerAddr');

        for(var i = 0; i < result.length; i++) {
            // 행정동의 region_type 값은 'H' 이므로
            if (result[i].region_type === 'H') {
                infoDiv.innerHTML = result[i].address_name;
                break;
            }
        }
    }    
}

</script>
